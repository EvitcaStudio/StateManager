/**
 * statemanager@1.0.0 https://github.com/EvitcaStudio/StateManager
 * Compiled 1/9/2024, 10:39:51 AM UTC
 * 
 * statemanager is licensed under a MIT styled License. See LICENSE.md for more info.
 * 
 * Copyright 2024, Evitca Studio, All Rights Reserved
 */
 var t={d:(e,s)=>{for(var r in s)t.o(s,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:s[r]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)},e={},s=(t.d(e,{Z:()=>h,O:()=>o}),{d:(t,e)=>{for(var r in e)s.o(e,r)&&!s.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)}),r={};s.d(r,{Y:()=>i});class i{constructor(t){this.RESET="[0m",this.BRIGHT="[1m",this.DIM="[2m",this.UNDERSCORE="[4m",this.BLINK="[5m",this.REVERSE="[7m",this.HIDDEN="[8m",this.FG_BLACK="[30m",this.FG_RED="[31m",this.FG_GREEN="[32m",this.FG_YELLOW="[33m",this.FG_BLUE="[34m",this.FG_MAGENTA="[35m",this.FG_CYAN="[36m",this.FG_WHITE="[37m",this.FG_GRAY="[90m",this.BG_BLACK="[40m",this.BG_RED="[41m",this.BG_GREEN="[42m",this.BG_YELLOW="[43m",this.BG_BLUE="[44m",this.BG_MAGENTA="[45m",this.BG_CYAN="[46m",this.BG_WHITE="[47m",this.BG_GRAY="[100m",this.TYPE_SPACER_LENGTH=13,this.types={default:this.FG_WHITE},this.currentType="",this.SPACE_CHAR=" ",this.FG_COLORS={};for(let t=0;t<=255;t++)this.FG_COLORS[t]="[38;5;"+t+"m";this.BG_COLORS={};for(let t=0;t<=255;t++)this.BG_COLORS[t]="[48;5;"+t+"m";Array.isArray(t)&&this.registerTypes(t)}prefix(t){return"string"==typeof t&&(this.currentType=t),this}message(e="log",...s){var r=this.currentType||"";if(0===r.length)console[e](...s);else{var i=r.length>=this.TYPE_SPACER_LENGTH;let t=this.types[r.toLowerCase()]?this.types[r.toLowerCase()]:this.types.default;var a=t.includes("");a||(t="color: "+t),!globalThis.window||a?console[e](t+r+this.SPACE_CHAR.repeat(Math.max(this.TYPE_SPACER_LENGTH-r.length,i?1:0))+"|"+this.RESET,...s):console[e]("%c"+r+this.SPACE_CHAR.repeat(Math.max(this.TYPE_SPACER_LENGTH-r.length,i?1:0))+"|",t,...s)}this.currentType=""}log(...t){this.message("log",...t)}info(...t){this.message("info",...t)}error(...t){this.message("error",...t)}warn(...t){this.message("warn",...t)}assert(...t){console.assert(...t)}debug(...t){this.message("debug",...t)}count(t){console.count(t)}countReset(t){console.countReset(t)}table(t,e){console.table(t,e)}time(t){this.message("time",t)}timeLog(t){this.message("timeLog",t)}timeEnd(t){this.message("timeEnd",t)}trace(...t){this.message("trace",...t)}group(t){this.message("group",t)}groupCollapsed(t){console.groupCollapsed(t)}groupEnd(){console.groupEnd()}clear(){console.clear()}registerType(t,e){this.types[t]||"string"==typeof t&&"string"==typeof e&&(this.types[t.toLowerCase()]=e)}registerTypes(e){if(Array.isArray(e))for(let t=0;t<e.length;t++)this.registerType(e[t].type,e[t].ansi)}unregisterType(t){this.types[t]&&delete this.types[t]}}var a=r.Y;class o{states={};currentState=null;version="1.0.0";constructor(t){if(this.logger=new a,this.logger.registerType("StateManager-Module","#ff6600"),"object"==typeof t&&!Array.isArray(t))for(const e in t)this.registerState()}registerState(t,e){"string"==typeof t?e instanceof h?(e.name=t,(this.states[t]=e).manager=this):this.logger.prefix("StateManager-Module").error(e+" is not a valid state."):this.logger.prefix("StateManager-Module").error("Invalid name for state.")}setState(t,...e){var s=this.states[t];s?(this.currentState&&this.currentState.exit(),this.currentState=s,this.currentState.enter(...e)):this.logger.prefix("StateManager-Module").warn(`State ${t} not found.`)}getCurrentState(){return this.currentState?this.currentState.name:null}update(t){this.currentState&&this.currentState.update(t)}}class h{enter(){}update(t){}exit(){}}var n=e.Z,l=e.O;export{n as State,l as StateManager};